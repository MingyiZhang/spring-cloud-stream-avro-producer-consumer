spring:
  cloud:
    stream:
      bindings:
        input:
          destination: employee-details
          consumer:
            useNativeDecoding: true
        output:
          destination: employee-details
          producer:
            useNativeEncoding: true
      kafka:
        binder:
          brokers: <BOOTSTRAP_SERVER_ADDRESSES>
          replication-factor: 3
          configuration:
            ssl.endpoint.identification.algorithm: https
            sasl.mechanism: PLAIN
            request.timeout.ms: 20000
            retry.backoff.ms: 500
            security.protocol: SASL_SSL
            sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="<CONFLUENT_CLOUD_CLUSTER_API_KEY>" password="<CONFLUENT_CLOUD_CLUSTER_API_SECRET>";
          producer-properties:
            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
          consumer-properties:
            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            specific.avro.reader: true
  kafka:
    properties:
      schema.registry.url: <SCHEMA_REGISTRY_ADDRESS>
      basic.auth.credentials.source: USER_INFO
      schema.registry.basic.auth.user.info: <SCHEMA_REGISTRY_KEY>:<SCHEMA_REGISTRY_SECRET>
